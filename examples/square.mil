# solve a two-dimensional square with uniform XS
#
# run as
#  $ milonga square.mil [ unstructured | structured ] [ --volumes | --elements ]

a = 100
MESH NAME structured   DIMENSIONS 2 STRUCTURED NCELLS_X 20 NCELLS_Y 20 LENGTH_X a LENGTH_Y a
MESH NAME unstructured DIMENSIONS 2 FILE_PATH square.msh 

DEFAULT_ARGUMENT_VALUE 1 unstructured
MILONGA_PROBLEM MESH $1

MATERIAL fuel D 1 nuSigmaF 3e-3 SigmaA 1e-3
PHYSICAL_ENTITY ID 5 NAME fuel MATERIAL fuel

PHYSICAL_ENTITY NAME left  BC null
PHYSICAL_ENTITY NAME right BC null
PHYSICAL_ENTITY NAME front BC null
PHYSICAL_ENTITY NAME back  BC null

# advance one milonga step (i.e, solve the problem)
MILONGA_STEP

# write the results into the standard output
# kreal = nuSigmaF(0,0)/(SigmaA(0,0)+D(0,0)*2*(pi/(a+4*D(0,0)))^2)
kreal = nuSigmaF(0,0)/(SigmaA(0,0)+D(0,0)*2*(pi/(a))^2)
PRINT_FUNCTION phi1 HEADER
PRINT TEXT "\# keff  = " %.8f keff
PRINT TEXT "\# kreal = " %.8f kreal
PRINT TEXT "\# rel error = " %.2e (keff-kreal)/keff

# compute the peak factor
VAR phimax vol intphi
MESH_FIND_MAX  FUNCTION phi1           MESH $1 MAX phimax
MESH_INTEGRATE EXPR     1    OVER fuel MESH $1 RESULT vol
MESH_INTEGRATE FUNCTION phi1 OVER fuel MESH $1 RESULT intphi
fp = phimax * vol / intphi
PRINT TEXT "\# peak factor =" %.3f fp


# post-processing in vtk and gmsh format
MESH_POST MESH $1 FILE_PATH square.vtk      phi1
MESH_POST MESH $1 FILE_PATH square_out.msh  phi1
